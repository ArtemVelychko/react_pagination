{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","lastPageItems","pageNumbers","pageContent","i","className","cn","disabled","href","onClick","map","page","active","item","content","items","App","useState","setPerPage","setCurrentPage","totalItems","length","itemsFrom","itemsTo","pageDescriprion","id","value","onChange","element","Number","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAe1C,IAVK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EADaH,IAAeF,EAE9BF,EAAQC,EACRA,EAEEO,EAAcf,EAAW,EAAGW,GAC5BK,EAAc,GAEXC,EAAI,EAAGA,EAAIH,EAAeG,IACjCD,EAAYX,KAAKY,GAAMR,EAAc,GAAKD,EAAW,GAGvD,OACE,qCACE,qBAAIU,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAChB,CAAEC,SAA0B,IAAhBX,IADd,SAGE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBZ,EAAoB,OAAS,QAC5Ca,QAAS,kBAAMZ,EAAaD,EAAc,IAL5C,oBAUDM,EAAYQ,KAAI,SAACC,GAChB,OACE,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASf,IADhD,SAIE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMZ,EAAac,IAJ9B,SAMGA,KAREA,MAaX,oBAAIN,UAAWC,IAAG,YAChB,CAAEC,SAAUX,IAAgBE,IAD9B,SAGE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAAeZ,IAAgBE,EAAa,OAAS,QACrDW,QAAS,kBAAMZ,EAAaD,EAAc,IAL5C,uBAWJ,6BACGO,EAAYO,KAAI,SAACG,GAChB,IAAMC,EAAO,eAAWD,GAExB,OACE,oBAAe,UAAQ,OAAvB,SACGC,GADMD,YC7EfE,EAAQ5B,EAAW,EAAG,IACzBuB,KAAI,SAAAnB,GAAC,qBAAYA,MAEPyB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBuB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOrB,EAAP,KAAoBuB,EAApB,KACMC,EAAaL,EAAMM,OAOnBC,GAAc1B,EAAc,GAAKD,EAAW,EAC5C4B,EAPaxB,KAAKC,KAAKoB,EAAazB,KAQvBC,EAAcwB,EAAazB,EAAUC,EAElD4B,EAAe,eAAW5B,EAAX,mBAAiC0B,EAAjC,cAAgDC,EAAhD,eAA8DH,EAA9D,KAErB,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACGmB,IAGH,sBAAKnB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAO/B,EACPgC,SAAU,SAACC,GACTV,EAAWW,OAAOD,EAAQE,OAAOJ,QACjCP,EAAe,IAPnB,UAUE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAO0B,EACPzB,QAASA,EACTC,YAAaA,EACbC,aA9CmB,SAACc,GACxBQ,EAAeR,UCZnBqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.705e20f4.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","/* eslint-disable no-plusplus */\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const isLastPage = totalPages === currentPage;\n  const lastPageItems = isLastPage\n    ? total % perPage\n    : perPage;\n\n  const pageNumbers = getNumbers(1, totalPages);\n  const pageContent = [];\n\n  for (let i = 0; i < lastPageItems; i++) {\n    pageContent.push(i + ((currentPage - 1) * perPage) + 1);\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item',\n          { disabled: currentPage === 1 })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1 ? 'true' : 'false'}\n            onClick={() => onPageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {pageNumbers.map((page) => {\n          return (\n            <li\n              className={cn('page-item', { active: page === currentPage })}\n              key={page}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={() => onPageChange(page)}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n        <li className={cn('page-item',\n          { disabled: currentPage === totalPages })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === totalPages ? 'true' : 'false'}\n            onClick={() => onPageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {pageContent.map((item) => {\n          const content = `Item ${item}`;\n\n          return (\n            <li key={item} data-cy=\"item\">\n              {content}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalItems = items.length;\n  const totalPages = Math.ceil(totalItems / perPage);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const itemsFrom = ((currentPage - 1) * perPage) + 1;\n  const itemsTo\n    = totalPages === currentPage ? totalItems : perPage * currentPage;\n\n  const pageDescriprion = `Page ${currentPage} (items ${itemsFrom} - ${itemsTo} of ${totalItems})`;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {pageDescriprion}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(element) => {\n              setPerPage(Number(element.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}